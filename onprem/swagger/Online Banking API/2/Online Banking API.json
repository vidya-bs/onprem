{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Online Banking API",
    "version" : "v1",
    "title" : "Online Banking API",
    "termsOfService" : "http://acmebank.apiwiz.io/terms-of-service",
    "contact" : {
      "name" : "Charles Livington",
      "url" : "http://acmebank.apiwiz.io",
      "email" : "support@apiwiz.com"
    },
    "license" : {
      "name" : "netbanking",
      "url" : "http://acmebank.apiwiz.io"
    }
  },
  "tags" : [ {
    "name" : "bank-account-controller",
    "description" : ""
  }, {
    "name" : "branch-location-controller",
    "description" : ""
  }, {
    "name" : "issue-controller",
    "description" : ""
  }, {
    "name" : "org-controller",
    "description" : ""
  }, {
    "name" : "primary-account-controller",
    "description" : ""
  }, {
    "name" : "product-controller",
    "description" : ""
  }, {
    "name" : "recepient-controller",
    "description" : ""
  }, {
    "name" : "savings-account-controller",
    "description" : ""
  }, {
    "name" : "savings-transaction-controller",
    "description" : ""
  }, {
    "name" : "transfers-controller",
    "description" : ""
  }, {
    "name" : "users-controller",
    "description" : ""
  } ],
  "paths" : {
    "/bank-account" : {
      "get" : {
        "tags" : [ "bank-account-controller" ],
        "summary" : "findAllBankAccount",
        "operationId" : "findAllBankAccountUsingGET",
        "parameters" : [ {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "x-key" : 1,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/Accept"
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfBankAccount"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "findAllBankAccountUsingGET",
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "bank-account-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Content-Type"
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BankAccount"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfBankAccount"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "addUsingPOST",
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "bank-account-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BankAccount"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfBankAccount"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "updateUsingPUT",
        "deprecated" : true,
        "security" : [ ]
      }
    },
    "/bank-account/deposit-amount" : {
      "put" : {
        "tags" : [ "bank-account-controller" ],
        "summary" : "deposit",
        "operationId" : "depositUsingPUT",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BankAccount"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/bank-account/withdraw-amount" : {
      "put" : {
        "tags" : [ "bank-account-controller" ],
        "summary" : "withdraw",
        "operationId" : "withdrawUsingPUT",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BankAccount"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/bank-account/{id}" : {
      "get" : {
        "tags" : [ "bank-account-controller" ],
        "summary" : "findBankAccountById",
        "operationId" : "findBankAccountByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfBankAccount"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "bank-account-controller" ],
        "summary" : "deleteById",
        "operationId" : "deleteByIdUsingDELETE",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/branches" : {
      "get" : {
        "tags" : [ "branch-location-controller" ],
        "summary" : "findAllBranches",
        "operationId" : "findAllBranchesUsingGET",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfBranch"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/Accept"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        } ],
        "description" : "findAllBranchesUsingGET",
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "branch-location-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_1",
        "parameters" : [ {
          "$ref" : "#/components/parameters/Content-Type"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Branch"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfBranch"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "addUsingPOST_1"
      }
    },
    "/branches/update" : {
      "put" : {
        "tags" : [ "branch-location-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_1",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Branch"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfBranch"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/branches/{id}" : {
      "get" : {
        "tags" : [ "branch-location-controller" ],
        "summary" : "findBranchById",
        "operationId" : "findBranchByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfBranch"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "branch-location-controller" ],
        "summary" : "deleteById",
        "operationId" : "deleteByIdUsingDELETE_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfBranch"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/issues" : {
      "post" : {
        "tags" : [ "issue-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Issue"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfIssue"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "addUsingPOST_2",
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "issue-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_2",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Issue2"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfIssue"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/issues/product/{projectId}" : {
      "get" : {
        "tags" : [ "issue-controller" ],
        "summary" : "findByProjectId",
        "operationId" : "findByProjectIdUsingGET",
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfIssue"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/issues/product/{projectId}/issue/{id}" : {
      "delete" : {
        "tags" : [ "issue-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfIssue"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/issues/ui" : {
      "post" : {
        "tags" : [ "issue-controller" ],
        "summary" : "addFromUI",
        "operationId" : "addFromUIUsingPOST",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Issue"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfIssue"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "issue-controller" ],
        "summary" : "updateFromUI",
        "operationId" : "updateFromUIUsingPUT",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Issue2"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfIssue"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/issues/{id}" : {
      "get" : {
        "tags" : [ "issue-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfIssue"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/orgs" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "x-key" : 1,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "x-key" : 2,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Accept"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfOrg"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "findAllUsingGET",
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "org-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org"
              }
            }
          },
          "description" : "request",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfOrg"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "createUsingPOST",
        "security" : [ ]
      }
    },
    "/orgs/allorgs" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findAllOrgs",
        "operationId" : "findAllOrgsUsingGET",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfOrg"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/orgs/by-user" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findOrgUsers",
        "operationId" : "findOrgUsersUsingGET",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfOrgUsers"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/orgs/find-by-name/{name}" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findByName",
        "operationId" : "findByNameUsingGET",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfOrgUsers"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/orgs/login-status" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "login",
        "operationId" : "loginUsingGET",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfOrgUsers"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/orgs/search" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "search",
        "operationId" : "searchUsingGET",
        "parameters" : [ {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfOrg"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/orgs/{branchId}/branch-user/{orgUserId}" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findOrgUserById",
        "operationId" : "findOrgUserByIdUsingGET",
        "parameters" : [ {
          "name" : "branchId",
          "in" : "path",
          "description" : "branchId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orgUserId",
          "in" : "path",
          "description" : "orgUserId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfOrgUsers"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/orgs/{branchId}/users/add-member" : {
      "post" : {
        "tags" : [ "org-controller" ],
        "summary" : "findOrgUsersById",
        "operationId" : "findOrgUsersByIdUsingPOST",
        "parameters" : [ {
          "name" : "branchId",
          "in" : "path",
          "description" : "branchId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Member"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/orgs/{branchId}/users/{userId}" : {
      "put" : {
        "tags" : [ "org-controller" ],
        "summary" : "updateOrgUser",
        "operationId" : "updateOrgUserUsingPUT",
        "parameters" : [ {
          "name" : "branchId",
          "in" : "path",
          "description" : "branchId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "userId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OrgUsers"
              }
            }
          },
          "description" : "request",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/orgs/{branchId}/users/{userId}/reset-password" : {
      "post" : {
        "tags" : [ "org-controller" ],
        "summary" : "resetPassword",
        "operationId" : "resetPasswordUsingPOST",
        "parameters" : [ {
          "name" : "branchId",
          "in" : "path",
          "description" : "branchId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "userId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Member"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/orgs/{id}" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfOrg"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "tags" : [ "org-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_3",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org"
              }
            }
          },
          "description" : "dto",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfOrg"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "org-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfOrg"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/orgs/{id}/users" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findOrgUsersById",
        "operationId" : "findOrgUsersByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfOrgUsers"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/primary-account/deposit-amount/{id}" : {
      "put" : {
        "tags" : [ "primary-account-controller" ],
        "summary" : "deposit",
        "operationId" : "depositUsingPUT_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "x-key" : 1,
          "schema" : {
            "type" : "string"
          }
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PrimaryAccount"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "depositUsingPUT_1",
        "security" : [ ]
      }
    },
    "/primary-account/primary-account" : {
      "get" : {
        "tags" : [ "primary-account-controller" ],
        "summary" : "findAllPrimaryAccount",
        "operationId" : "findAllPrimaryAccountUsingGET",
        "parameters" : [ {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "x-key" : 1,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Accept"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfPrimaryAccount"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "findAllPrimaryAccountUsingGET",
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "primary-account-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_3",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PrimaryAccount"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfPrimaryAccount"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "addUsingPOST_3",
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "primary-account-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_4",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PrimaryAccount"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfPrimaryAccount"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/primary-account/primary-account/{id}" : {
      "get" : {
        "tags" : [ "primary-account-controller" ],
        "summary" : "findPrimaryAccountById",
        "operationId" : "findPrimaryAccountByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfPrimaryAccount"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "primary-account-controller" ],
        "summary" : "deleteById",
        "operationId" : "deleteByIdUsingDELETE_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/primary-account/withdraw-amount/{id}" : {
      "put" : {
        "tags" : [ "primary-account-controller" ],
        "summary" : "withdraw",
        "operationId" : "withdrawUsingPUT_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PrimaryAccount"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/primary-transaction" : {
      "get" : {
        "tags" : [ "primary-transaction-controller" ],
        "summary" : "findAllPrimaryTransaction",
        "operationId" : "findAllPrimaryTransactionUsingGET",
        "parameters" : [ {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "x-key" : 1,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Accept"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfPrimaryTransaction"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "findAllPrimaryTransactionUsingGET",
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "primary-transaction-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_4",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PrimaryTransaction"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfPrimaryTransaction"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "addUsingPOST_4",
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "primary-transaction-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_5",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/PrimaryTransaction"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfPrimaryTransaction"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/primary-transaction/{id}" : {
      "get" : {
        "tags" : [ "primary-transaction-controller" ],
        "summary" : "findPrimaryTransactionById",
        "operationId" : "findPrimaryTransactionByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfPrimaryTransaction"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "primary-transaction-controller" ],
        "summary" : "deleteById",
        "operationId" : "deleteByIdUsingDELETE_3",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfPrimaryTransaction"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "tags" : [ "product-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_1",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "x-key" : 1,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "x-key" : 2,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Accept"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfProject"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "findAllUsingGET_1",
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "product-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_5",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          },
          "description" : "request",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfProject"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "addUsingPOST_5",
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "product-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_6",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          },
          "description" : "dto",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfProject"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : true,
        "description" : "updateUsingPUT_6"
      }
    },
    "/products/{id}" : {
      "get" : {
        "tags" : [ "product-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfProject"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "product-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfProject"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/recepient" : {
      "get" : {
        "tags" : [ "recepient-controller" ],
        "summary" : "findAllRecepients",
        "operationId" : "findAllRecepientsUsingGET",
        "parameters" : [ {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "x-key" : 1,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Accept"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfRecepient"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "findAllRecepientsUsingGET",
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "recepient-controller" ],
        "summary" : "addRecepient",
        "operationId" : "addRecepientUsingPOST",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Recepient"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfRecepient"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "addRecepientUsingPOST",
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "recepient-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_7",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Recepient"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfRecepient"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/recepient/{id}" : {
      "get" : {
        "tags" : [ "recepient-controller" ],
        "summary" : "findRecepientById",
        "operationId" : "findRecepientByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfRecepient"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "recepient-controller" ],
        "summary" : "deleteById",
        "operationId" : "deleteByIdUsingDELETE_4",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfRecepient"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/savings-account/savings-account" : {
      "get" : {
        "tags" : [ "savings-account-controller" ],
        "summary" : "findAllSavingsAccount",
        "operationId" : "findAllSavingsAccountUsingGET",
        "parameters" : [ {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "x-key" : 1,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Accept"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfSavingsAccount"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "findAllSavingsAccountUsingGET",
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "savings-account-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_6",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/SavingsAccount"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfSavingsAccount"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "addUsingPOST_6",
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "savings-account-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_8",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/SavingsAccount"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfSavingsAccount"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/savings-account/savings-account/{id}" : {
      "get" : {
        "tags" : [ "savings-account-controller" ],
        "summary" : "findSavingsAccountById",
        "operationId" : "findSavingsAccountByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfSavingsAccount"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "savings-account-controller" ],
        "summary" : "deleteById",
        "operationId" : "deleteByIdUsingDELETE_5",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfSavingsAccount"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/savings-transaction" : {
      "get" : {
        "tags" : [ "savings-transaction-controller" ],
        "summary" : "findAllSavingsTransaction",
        "operationId" : "findAllSavingsTransactionUsingGET",
        "parameters" : [ {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "x-key" : 1,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Accept"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfSavingsTransaction"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "findAllSavingsTransactionUsingGET",
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "savings-transaction-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_7",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/SavingsTransaction"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfSavingsTransaction"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "addUsingPOST_7",
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "savings-transaction-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_9",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/SavingsTransaction"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfSavingsTransaction"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/savings-transaction/{id}" : {
      "get" : {
        "tags" : [ "savings-transaction-controller" ],
        "summary" : "findSavingsTransactionById",
        "operationId" : "findSavingsTransactionByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfSavingsTransaction"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "savings-transaction-controller" ],
        "summary" : "deleteById",
        "operationId" : "deleteByIdUsingDELETE_6",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfSavingsTransaction"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/transfers" : {
      "get" : {
        "tags" : [ "transfers-controller" ],
        "summary" : "findAllTransfers",
        "operationId" : "findAllTransfersUsingGET",
        "parameters" : [ {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "x-key" : 1,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 20
          }
        }, {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Accept"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfListOfTransfers"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "findAllTransfersUsingGET",
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "transfers-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_8",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Transfers"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfTransfers"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "addUsingPOST_8",
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "transfers-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_10",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Transfers"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfTransfers"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    },
    "/transfers/{id}" : {
      "get" : {
        "tags" : [ "transfers-controller" ],
        "summary" : "findTransfersById",
        "operationId" : "findTransfersByIdUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfTransfers"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "tags" : [ "transfers-controller" ],
        "summary" : "deleteById",
        "operationId" : "deleteByIdUsingDELETE_7",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfTransfers"
                }
              }
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/users/enterprise-sign-up" : {
      "post" : {
        "tags" : [ "users-controller" ],
        "summary" : "enterpriseSignUp",
        "operationId" : "enterpriseSignUpUsingPOST",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Users"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "enterpriseSignUpUsingPOST",
        "security" : [ ]
      }
    },
    "/users/personal-sign-up" : {
      "post" : {
        "tags" : [ "users-controller" ],
        "summary" : "personalSignUp",
        "operationId" : "personalSignUpUsingPOST",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Users"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "personalSignUpUsingPOST",
        "security" : [ ]
      }
    },
    "/users/status" : {
      "get" : {
        "tags" : [ "users-controller" ],
        "summary" : "login",
        "operationId" : "loginUsingGET_1",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfUsers"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Accept"
        } ],
        "description" : "loginUsingGET_1"
      }
    },
    "/users/team-sign-up" : {
      "post" : {
        "tags" : [ "users-controller" ],
        "summary" : "teamSignUp",
        "operationId" : "teamSignUpUsingPOST",
        "parameters" : [ {
          "$ref" : "#/components/parameters/x-fin-acme"
        }, {
          "$ref" : "#/components/parameters/x-apikey"
        }, {
          "$ref" : "#/components/parameters/x-fin-res"
        }, {
          "$ref" : "#/components/parameters/Content-Type"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Users"
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseOfboolean"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "description" : "teamSignUpUsingPOST",
        "security" : [ ]
      }
    }
  },
  "x-mock" : true,
  "x-metadata" : {
    "metadata" : {
      "swaggerName" : "e639c45aa1ad444bb1ba0ec77263fa60",
      "revision" : 1,
      "documentation" : [ ],
      "category" : [ {
        "name" : "Unsorted",
        "paths" : [ "/bank-account", "/bank-account/deposit-amount", "/bank-account/withdraw-amount", "/bank-account/{id}", "/branches", "/branches/update", "/branches/{id}", "/issues", "/issues/product/{projectId}", "/issues/product/{projectId}/issue/{id}", "/issues/ui", "/issues/{id}", "/orgs", "/orgs/allorgs", "/orgs/by-user", "/orgs/find-by-name/{name}", "/orgs/login-status", "/orgs/search", "/orgs/{branchId}/branch-user/{orgUserId}", "/orgs/{branchId}/users/add-member", "/orgs/{branchId}/users/{userId}", "/orgs/{branchId}/users/{userId}/reset-password", "/orgs/{id}", "/orgs/{id}/users", "/primary-account/deposit-amount/{id}", "/primary-account/primary-account", "/primary-account/primary-account/{id}", "/primary-account/withdraw-amount/{id}", "/primary-transaction", "/primary-transaction/{id}", "/products", "/products/{id}", "/recepient", "/recepient/{id}", "/savings-account/savings-account", "/savings-account/savings-account/{id}", "/savings-transaction", "/savings-transaction/{id}", "/transfers", "/transfers/{id}", "/users/enterprise-sign-up", "/users/personal-sign-up", "/users/status", "/users/team-sign-up" ],
        "definitions" : [ "BankAccount", "Branch", "Issue", "Member", "Message", "NameDto", "Org", "OrgUsers", "PrimaryAccount", "PrimaryTransaction", "Project", "Recepient", "ResponseOfBankAccount", "ResponseOfBranch", "ResponseOfIssue", "ResponseOfListOfBankAccount", "ResponseOfListOfBranch", "ResponseOfListOfIssue", "ResponseOfListOfOrg", "ResponseOfListOfOrgUsers", "ResponseOfListOfPrimaryAccount", "ResponseOfListOfPrimaryTransaction", "ResponseOfListOfProject", "ResponseOfListOfRecepient", "ResponseOfListOfSavingsAccount", "ResponseOfListOfSavingsTransaction", "ResponseOfListOfTransfers", "ResponseOfOrg", "ResponseOfOrgUsers", "ResponseOfPrimaryAccount", "ResponseOfPrimaryTransaction", "ResponseOfProject", "ResponseOfRecepient", "ResponseOfSavingsAccount", "ResponseOfSavingsTransaction", "ResponseOfTransfers", "ResponseOfUsers", "ResponseOfboolean", "SavingsAccount", "SavingsTransaction", "Transfers", "UserMinimalDto", "Users" ]
      } ]
    }
  },
  "servers" : [ ],
  "components" : {
    "parameters" : {
      "x-fin-acme" : {
        "name" : "x-fin-acme",
        "in" : "header",
        "required" : true,
        "x-newAdded" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "x-fin-stp-id" : {
        "name" : "x-fin-stp-id",
        "in" : "header",
        "required" : false,
        "x-newAdded" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "x-apikey" : {
        "name" : "x-apikey",
        "in" : "header",
        "required" : true,
        "x-newAdded" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "x-fin-res" : {
        "name" : "x-fin-res",
        "in" : "header",
        "required" : true,
        "x-newAdded" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "Accept" : {
        "name" : "Accept",
        "in" : "header",
        "required" : true,
        "x-newAdded" : true,
        "example" : "",
        "schema" : {
          "type" : "string",
          "enum" : [ "application/json" ],
          "default" : "application/json"
        }
      },
      "Content-Type" : {
        "name" : "Content-Type",
        "in" : "header",
        "required" : true,
        "x-newAdded" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "application/json" ],
          "default" : "application/json"
        }
      }
    },
    "requestBodies" : {
      "BankAccount" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BankAccount"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "PrimaryAccount" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PrimaryAccount"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "Member" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Member"
            }
          }
        },
        "description" : "member",
        "required" : true
      },
      "Issue" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Issue"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "Recepient" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Recepient"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "Issue2" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Issue"
            }
          }
        },
        "description" : "dto",
        "required" : true
      },
      "PrimaryTransaction" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/PrimaryTransaction"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "Branch" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Branch"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "SavingsAccount" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SavingsAccount"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "SavingsTransaction" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/SavingsTransaction"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "Transfers" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Transfers"
            }
          }
        },
        "description" : "request",
        "required" : true
      },
      "Users" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Users"
            }
          }
        },
        "description" : "users",
        "required" : true
      }
    },
    "schemas" : {
      "BankAccount" : {
        "type" : "object",
        "properties" : {
          "accountBalance" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountNumber" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "user" : {
            "$ref" : "#/components/schemas/NameDto"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "BankAccount"
      },
      "Branch" : {
        "type" : "object",
        "properties" : {
          "access" : {
            "type" : "string"
          },
          "atmAtBranch" : {
            "type" : "string"
          },
          "branchMediatedServiceName" : {
            "type" : "string"
          },
          "branchName" : {
            "type" : "string"
          },
          "branchType" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "customerSegment" : {
            "type" : "string"
          },
          "faxNumber" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "Branch"
      },
      "Issue" : {
        "type" : "object",
        "properties" : {
          "assertions" : {
            "type" : "string"
          },
          "assignedTo" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "endpoint" : {
            "type" : "string"
          },
          "env" : {
            "type" : "string"
          },
          "failedAssertions" : {
            "type" : "string"
          },
          "headers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "issueName" : {
            "type" : "string"
          },
          "issueStatus" : {
            "type" : "string",
            "enum" : [ "OPEN", "CLOSED" ]
          },
          "issueType" : {
            "type" : "string",
            "enum" : [ "MANUAL", "AUTOMATIC" ]
          },
          "method" : {
            "type" : "string",
            "enum" : [ "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS", "TRACE" ]
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "project" : {
            "$ref" : "#/components/schemas/Project"
          },
          "requestBody" : {
            "type" : "string"
          },
          "responseBody" : {
            "type" : "string"
          },
          "responseHeaders" : {
            "type" : "string"
          },
          "result" : {
            "type" : "string"
          },
          "statusCode" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "Issue"
      },
      "Member" : {
        "type" : "object",
        "properties" : {
          "confirmPassword" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "orgId" : {
            "type" : "string"
          },
          "orgRole" : {
            "type" : "string",
            "enum" : [ "READ", "WRITE", "ADMIN", "USER", "PROJECT_MANAGER", "ENTERPRISE_ADMIN", "BANK_ACCOUNTANT", "BANK_MANAGER" ]
          },
          "password" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "Member"
      },
      "Message" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "INFO", "ERROR", "WARNING" ]
          },
          "value" : {
            "type" : "string"
          }
        },
        "title" : "Message"
      },
      "NameDto" : {
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "NameDto"
      },
      "Org" : {
        "type" : "object",
        "properties" : {
          "billingEmail" : {
            "type" : "string"
          },
          "company" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "location" : {
            "type" : "string"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "orgPlan" : {
            "type" : "string",
            "enum" : [ "FREE", "PRO", "TEAM", "BASIC", "BUSINESS", "ENTERPRISE", "PAY_AS_YOU_GO" ]
          },
          "orgType" : {
            "type" : "string",
            "enum" : [ "PERSONAL", "TEAM", "ENTERPRISE" ]
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "Org"
      },
      "OrgUsers" : {
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "org" : {
            "$ref" : "#/components/schemas/NameDto"
          },
          "orgRole" : {
            "type" : "string",
            "enum" : [ "READ", "WRITE", "ADMIN", "USER", "PROJECT_MANAGER", "ENTERPRISE_ADMIN", "BANK_ACCOUNTANT", "BANK_MANAGER" ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INVITED", "ACTIVE", "INACTIVE", "DECLINED", "REMOVED" ]
          },
          "users" : {
            "$ref" : "#/components/schemas/UserMinimalDto"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "OrgUsers"
      },
      "PrimaryAccount" : {
        "type" : "object",
        "properties" : {
          "accountBalance" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountNumber" : {
            "type" : "integer",
            "format" : "int64"
          },
          "accountType" : {
            "type" : "string",
            "enum" : [ "SAVING", "CURRENT", "CREDIT" ]
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "PrimaryAccount"
      },
      "PrimaryTransaction" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "format" : "double"
          },
          "availableBalance" : {
            "type" : "number"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/NameDto"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "PrimaryTransaction"
      },
      "Project" : {
        "type" : "object",
        "properties" : {
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "org" : {
            "$ref" : "#/components/schemas/NameDto"
          },
          "refId" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "Project"
      },
      "Recepient" : {
        "type" : "object",
        "properties" : {
          "accountNumber" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/NameDto"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "Recepient"
      },
      "ResponseOfBankAccount" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BankAccount"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfBankAccount"
      },
      "ResponseOfBranch" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Branch"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfBranch"
      },
      "ResponseOfIssue" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Issue"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfIssue"
      },
      "ResponseOfListOfBankAccount" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BankAccount"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfBankAccount"
      },
      "ResponseOfListOfBranch" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Branch"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfBranch"
      },
      "ResponseOfListOfIssue" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Issue"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfIssue"
      },
      "ResponseOfListOfOrg" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Org"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfOrg"
      },
      "ResponseOfListOfOrgUsers" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OrgUsers"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfOrgUsers"
      },
      "ResponseOfListOfPrimaryAccount" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrimaryAccount"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfPrimaryAccount"
      },
      "ResponseOfListOfPrimaryTransaction" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PrimaryTransaction"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfPrimaryTransaction"
      },
      "ResponseOfListOfProject" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Project"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfProject"
      },
      "ResponseOfListOfRecepient" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Recepient"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfRecepient"
      },
      "ResponseOfListOfSavingsAccount" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccount"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfSavingsAccount"
      },
      "ResponseOfListOfSavingsTransaction" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsTransaction"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfSavingsTransaction"
      },
      "ResponseOfListOfTransfers" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Transfers"
            }
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfListOfTransfers"
      },
      "ResponseOfOrg" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Org"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfOrg"
      },
      "ResponseOfOrgUsers" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/OrgUsers"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfOrgUsers"
      },
      "ResponseOfPrimaryAccount" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PrimaryAccount"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfPrimaryAccount"
      },
      "ResponseOfPrimaryTransaction" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/PrimaryTransaction"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfPrimaryTransaction"
      },
      "ResponseOfProject" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Project"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfProject"
      },
      "ResponseOfRecepient" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Recepient"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfRecepient"
      },
      "ResponseOfSavingsAccount" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SavingsAccount"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfSavingsAccount"
      },
      "ResponseOfSavingsTransaction" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/SavingsTransaction"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfSavingsTransaction"
      },
      "ResponseOfTransfers" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Transfers"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfTransfers"
      },
      "ResponseOfUsers" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Users"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfUsers"
      },
      "ResponseOfboolean" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "boolean"
          },
          "errors" : {
            "type" : "boolean"
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Message"
            }
          },
          "requestId" : {
            "type" : "string"
          },
          "requestTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "title" : "ResponseOfboolean"
      },
      "SavingsAccount" : {
        "type" : "object",
        "properties" : {
          "accountBalance" : {
            "type" : "number"
          },
          "accountNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "user" : {
            "$ref" : "#/components/schemas/NameDto"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "SavingsAccount"
      },
      "SavingsTransaction" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "number",
            "format" : "double"
          },
          "availableBalance" : {
            "type" : "number"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "status" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "user" : {
            "$ref" : "#/components/schemas/NameDto"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "SavingsTransaction"
      },
      "Transfers" : {
        "type" : "object",
        "properties" : {
          "confirmed" : {
            "type" : "boolean"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "location" : {
            "type" : "string"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "transactionType" : {
            "type" : "string",
            "enum" : [ "DEPOSIT", "WITHDRAW", "CHARGE", "ATM", "ONLINE", "POS", "TRANSFER", "CHECK" ]
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "Transfers"
      },
      "UserMinimalDto" : {
        "type" : "object",
        "properties" : {
          "company" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "jobTitle" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "UserMinimalDto"
      },
      "Users" : {
        "type" : "object",
        "properties" : {
          "accountNonExpired" : {
            "type" : "boolean"
          },
          "accountNonLocked" : {
            "type" : "boolean"
          },
          "company" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "string"
          },
          "createdDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "credentialsNonExpired" : {
            "type" : "boolean"
          },
          "email" : {
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "inactive" : {
            "type" : "boolean"
          },
          "jobTitle" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "modifiedBy" : {
            "type" : "string"
          },
          "modifiedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "privileges" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "username" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "title" : "Users"
      }
    }
  }
}